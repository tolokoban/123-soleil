"use strict";(self.webpackChunk_123_soleil=self.webpackChunk_123_soleil||[]).push([[143],{3788:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),i=t.n(r),o=t(3645),a=t.n(o)()(i());a.push([e.id,"html,\nbody,\ndiv#root {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    overflow: hidden;\n    font-size: 5vmin;\n    font-family: sans-serif;\n}\n\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n\nhr {\n    margin: 1.5rem 0;\n    display: block;\n    width: 100%;\n    height: 1px;\n    border: 0;\n    background-image: linear-gradient(\n        to right,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.layout-flex-wide {\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\n.layout-flex-wide > * {\n    flex: 1 1 auto;\n}\n\n@media (orientation: landscape) {\n    .layout-flex-wide {\n        flex-direction: row;\n    }\n}\n\n@media (orientation: portrait) {\n    .layout-flex-wide {\n        flex-direction: column;\n    }\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;IAGI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,UAAU;IACV,SAAS;IACT,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;AAC3B;;;AAGA;IACI,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,WAAW;IACX,SAAS;IACT;;;;;;KAMC;AACL;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,oBAAoB;AACxB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI;QACI,mBAAmB;IACvB;AACJ;;AAEA;IACI;QACI,sBAAsB;IAC1B;AACJ",sourcesContent:["html,\nbody,\ndiv#root {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    overflow: hidden;\n    font-size: 5vmin;\n    font-family: sans-serif;\n}\n\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n\nhr {\n    margin: 1.5rem 0;\n    display: block;\n    width: 100%;\n    height: 1px;\n    border: 0;\n    background-image: linear-gradient(\n        to right,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.layout-flex-wide {\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\n.layout-flex-wide > * {\n    flex: 1 1 auto;\n}\n\n@media (orientation: landscape) {\n    .layout-flex-wide {\n        flex-direction: row;\n    }\n}\n\n@media (orientation: portrait) {\n    .layout-flex-wide {\n        flex-direction: column;\n    }\n}\n"],sourceRoot:""}]);const s=a},134:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),i=t.n(r),o=t(3645),a=t.n(o)()(i());a.push([e.id,"html,\nbody,\n.view-AppView {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n}\n\n.view-AppView pre {\n    background: #fffd;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    white-space: pre-wrap;\n    padding: 1rem;\n}","",{version:3,sources:["webpack://./src/view/app/app-view.css"],names:[],mappings:"AAAA;;;IAGI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,UAAU;IACV,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,QAAQ;IACR,qBAAqB;IACrB,aAAa;AACjB",sourcesContent:["html,\nbody,\n.view-AppView {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n}\n\n.view-AppView pre {\n    background: #fffd;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    white-space: pre-wrap;\n    padding: 1rem;\n}"],sourceRoot:""}]);const s=a},7223:(e,n,t)=>{t.d(n,{Z:()=>f});var r=t(7537),i=t.n(r),o=t(3645),a=t.n(o),s=t(1667),u=t.n(s),l=new URL(t(3642),t.b),A=a()(i()),c=u()(l);A.push([e.id,".view-BackgroundView {\n    background-image: url("+c+");\n    background-size: cover;\n    background-position: center top;\n    transition: all 1s;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    transform-origin: center top;\n    transform: scale(1);\n    filter: blur(0);\n}\n\n.view-BackgroundView.blur {\n    filter: blur(16px);\n}\n\n.view-BackgroundView.zoom {\n    transform: scale(2);\n}\n","",{version:3,sources:["webpack://./src/view/background/background-view.css"],names:[],mappings:"AAAA;IACI,yDAAgD;IAChD,sBAAsB;IACtB,+BAA+B;IAC/B,kBAAkB;IAClB,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,UAAU;IACV,SAAS;IACT,4BAA4B;IAC5B,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:[".view-BackgroundView {\n    background-image: url(../../gfx/background.webp);\n    background-size: cover;\n    background-position: center top;\n    transition: all 1s;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    transform-origin: center top;\n    transform: scale(1);\n    filter: blur(0);\n}\n\n.view-BackgroundView.blur {\n    filter: blur(16px);\n}\n\n.view-BackgroundView.zoom {\n    transform: scale(2);\n}\n"],sourceRoot:""}]);const f=A},530:(e,n,t)=>{t.d(n,{Z:()=>f});var r=t(7537),i=t.n(r),o=t(3645),a=t.n(o),s=t(1667),u=t.n(s),l=new URL(t(9441),t.b),A=a()(i()),c=u()(l);A.push([e.id,".view-DeadView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url("+c+");\n    background-size: cover;\n    background-position: center;\n}\n\n.view-DeadView > button {\n    position: absolute;\n    left: 3rem;\n    right: 3rem;\n    bottom: 3rem;\n    width: calc(100% - 6rem);\n    border: none;\n    cursor: pointer;\n    font: inherit;\n    font-size: 120%;\n    text-transform: uppercase;\n    padding: 1rem;\n    border-radius: .25rem;\n    box-shadow: 0 0 .25em #fffb, 0 0 .5em .25em #f00, 0 0 .5em .5em #000a;\n    background: #600;\n    color: #fffe;\n}","",{version:3,sources:["webpack://./src/view/dead/dead-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,yDAA0C;IAC1C,sBAAsB;IACtB,2BAA2B;AAC/B;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,YAAY;IACZ,wBAAwB;IACxB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,qBAAqB;IACrB,qEAAqE;IACrE,gBAAgB;IAChB,YAAY;AAChB",sourcesContent:[".view-DeadView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(../../gfx/dead.webp);\n    background-size: cover;\n    background-position: center;\n}\n\n.view-DeadView > button {\n    position: absolute;\n    left: 3rem;\n    right: 3rem;\n    bottom: 3rem;\n    width: calc(100% - 6rem);\n    border: none;\n    cursor: pointer;\n    font: inherit;\n    font-size: 120%;\n    text-transform: uppercase;\n    padding: 1rem;\n    border-radius: .25rem;\n    box-shadow: 0 0 .25em #fffb, 0 0 .5em .25em #f00, 0 0 .5em .5em #000a;\n    background: #600;\n    color: #fffe;\n}"],sourceRoot:""}]);const f=A},810:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),i=t.n(r),o=t(3645),a=t.n(o)()(i());a.push([e.id,'.view-RunView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n}\n\n.view-RunView > div {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n    font-weight: bolder;\n    font-size: 300%;\n    text-shadow: 0 2px 2px #fff,\n    0 -2px 2px #fff,\n    -2px 0 2px #fff,\n    2px 0 2px #fff;\n    color: #000;\n}\n\n.view-RunView::before {\n    content: "RUN";\n    transform: scale(2);\n    font-weight: bolder;\n    font-size: 300%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n    color: #f00;\n    animation: anim-run .5s infinite;\n}\n\n@keyframes anim-run {\n    from { transform: translateY(0) scale(1); opacity: 1; }\n    to { transform: translateY(-3rem) scale(3); opacity: 0; }\n}',"",{version:3,sources:["webpack://./src/view/run/run-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,eAAe;IACf;;;kBAGc;IACd,WAAW;AACf;;AAEA;IACI,cAAc;IACd,mBAAmB;IACnB,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,WAAW;IACX,gCAAgC;AACpC;;AAEA;IACI,OAAO,iCAAiC,EAAE,UAAU,EAAE;IACtD,KAAK,qCAAqC,EAAE,UAAU,EAAE;AAC5D",sourcesContent:['.view-RunView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n}\n\n.view-RunView > div {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n    font-weight: bolder;\n    font-size: 300%;\n    text-shadow: 0 2px 2px #fff,\n    0 -2px 2px #fff,\n    -2px 0 2px #fff,\n    2px 0 2px #fff;\n    color: #000;\n}\n\n.view-RunView::before {\n    content: "RUN";\n    transform: scale(2);\n    font-weight: bolder;\n    font-size: 300%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n    color: #f00;\n    animation: anim-run .5s infinite;\n}\n\n@keyframes anim-run {\n    from { transform: translateY(0) scale(1); opacity: 1; }\n    to { transform: translateY(-3rem) scale(3); opacity: 0; }\n}'],sourceRoot:""}]);const s=a},2555:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),i=t.n(r),o=t(3645),a=t.n(o)()(i());a.push([e.id,'div.view-ShakeProgressView {\n    position: absolute;\n    left: 1rem;\n    right: 1rem;\n    bottom: 5rem;\n    height: 3rem;\n    width: auto;\n    border-radius: 1rem;\n    border: .25rem solid #fffc;\n    box-shadow: 0 .125rem .25rem .125rem #0009;\n    background-image: linear-gradient(to top,#333,#000);\n    overflow: hidden;\n}\n\ndiv.view-ShakeProgressView > div {\n    position: absolute;\n    height: 100%;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    border-radius: 0 .5rem .5rem 0;\n    overflow: hidden;\n}\n\ndiv.view-ShakeProgressView > div::after {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 50%;\n    border-radius: 0 0 .25rem .25rem;\n    background-color: #fff6;\n}',"",{version:3,sources:["webpack://./src/view/shake-progress/shake-progress-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,0BAA0B;IAC1B,0CAA0C;IAC1C,mDAAmD;IACnD,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,OAAO;IACP,MAAM;IACN,SAAS;IACT,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,WAAW;IACX,gCAAgC;IAChC,uBAAuB;AAC3B",sourcesContent:['div.view-ShakeProgressView {\n    position: absolute;\n    left: 1rem;\n    right: 1rem;\n    bottom: 5rem;\n    height: 3rem;\n    width: auto;\n    border-radius: 1rem;\n    border: .25rem solid #fffc;\n    box-shadow: 0 .125rem .25rem .125rem #0009;\n    background-image: linear-gradient(to top,#333,#000);\n    overflow: hidden;\n}\n\ndiv.view-ShakeProgressView > div {\n    position: absolute;\n    height: 100%;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    border-radius: 0 .5rem .5rem 0;\n    overflow: hidden;\n}\n\ndiv.view-ShakeProgressView > div::after {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 50%;\n    border-radius: 0 0 .25rem .25rem;\n    background-color: #fff6;\n}'],sourceRoot:""}]);const s=a},3164:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),i=t.n(r),o=t(3645),a=t.n(o)()(i());a.push([e.id,".view-StackView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.view-StackView > div {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    transition: all .3s;\n}\n\n.view-StackView > div.show {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.view-StackView > div.hide {\n    opacity: 0;\n    pointer-events: none;\n}\n","",{version:3,sources:["webpack://./src/view/stack/stack-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,UAAU;IACV,oBAAoB;AACxB",sourcesContent:[".view-StackView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.view-StackView > div {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    transition: all .3s;\n}\n\n.view-StackView > div.show {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.view-StackView > div.hide {\n    opacity: 0;\n    pointer-events: none;\n}\n"],sourceRoot:""}]);const s=a},5440:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),i=t.n(r),o=t(3645),a=t.n(o)()(i());a.push([e.id,".view-StartView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.view-StartView > p {\n    font-weight: bolder;\n    padding: 1em;\n    border-radius: .25em;\n    background: #fff7;\n    text-align: center;\n    margin: 1rem;\n}\n\n.view-StartView > button {\n    font: inherit;\n    font-size: 120%;\n    border: inherit;\n    padding: 1em;\n    width: 40vmin;\n    height: 40vmin;\n    border-radius: 50%;\n    background: #600;\n    color: #fffe;\n    text-transform: uppercase;\n    letter-spacing: .125em;\n    text-align: center;\n    box-shadow: 0 0 .5em .25em #f00, 0 0 .5em #000;\n    cursor: pointer;\n}\n\n.view-StartView > button > * {\n    pointer-events: none;\n}","",{version:3,sources:["webpack://./src/view/start/start-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,oBAAoB;IACpB,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,eAAe;IACf,YAAY;IACZ,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;IACZ,yBAAyB;IACzB,sBAAsB;IACtB,kBAAkB;IAClB,8CAA8C;IAC9C,eAAe;AACnB;;AAEA;IACI,oBAAoB;AACxB",sourcesContent:[".view-StartView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.view-StartView > p {\n    font-weight: bolder;\n    padding: 1em;\n    border-radius: .25em;\n    background: #fff7;\n    text-align: center;\n    margin: 1rem;\n}\n\n.view-StartView > button {\n    font: inherit;\n    font-size: 120%;\n    border: inherit;\n    padding: 1em;\n    width: 40vmin;\n    height: 40vmin;\n    border-radius: 50%;\n    background: #600;\n    color: #fffe;\n    text-transform: uppercase;\n    letter-spacing: .125em;\n    text-align: center;\n    box-shadow: 0 0 .5em .25em #f00, 0 0 .5em #000;\n    cursor: pointer;\n}\n\n.view-StartView > button > * {\n    pointer-events: none;\n}"],sourceRoot:""}]);const s=a},9317:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),i=t.n(r),o=t(7795),a=t.n(o),s=t(569),u=t.n(s),l=t(3565),A=t.n(l),c=t(9216),f=t.n(c),d=t(4589),h=t.n(d),p=t(3788),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(p.Z,m);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},3910:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),i=t.n(r),o=t(7795),a=t.n(o),s=t(569),u=t.n(s),l=t(3565),A=t.n(l),c=t(9216),f=t.n(c),d=t(4589),h=t.n(d),p=t(134),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(p.Z,m);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},7900:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),i=t.n(r),o=t(7795),a=t.n(o),s=t(569),u=t.n(s),l=t(3565),A=t.n(l),c=t(9216),f=t.n(c),d=t(4589),h=t.n(d),p=t(7223),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(p.Z,m);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},2351:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),i=t.n(r),o=t(7795),a=t.n(o),s=t(569),u=t.n(s),l=t(3565),A=t.n(l),c=t(9216),f=t.n(c),d=t(4589),h=t.n(d),p=t(530),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(p.Z,m);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},9619:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),i=t.n(r),o=t(7795),a=t.n(o),s=t(569),u=t.n(s),l=t(3565),A=t.n(l),c=t(9216),f=t.n(c),d=t(4589),h=t.n(d),p=t(810),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(p.Z,m);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},2896:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),i=t.n(r),o=t(7795),a=t.n(o),s=t(569),u=t.n(s),l=t(3565),A=t.n(l),c=t(9216),f=t.n(c),d=t(4589),h=t.n(d),p=t(2555),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(p.Z,m);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},2261:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),i=t.n(r),o=t(7795),a=t.n(o),s=t(569),u=t.n(s),l=t(3565),A=t.n(l),c=t(9216),f=t.n(c),d=t(4589),h=t.n(d),p=t(3164),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(p.Z,m);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},7463:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),i=t.n(r),o=t(7795),a=t.n(o),s=t(569),u=t.n(s),l=t(3565),A=t.n(l),c=t(9216),f=t.n(c),d=t(4589),h=t.n(d),p=t(5440),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=u().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=f(),i()(p.Z,m);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},3665:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var i=r(t(2105)),o=function(){function e(){var e=this;this.event=new i.default,this.DeviceAPI=window.DeviceAPI,window.addEventListener("message",(function(n){var t=n.data;if(t&&!Array.isArray(t)){var r=t.type,i=t.name,o=t.args;"DeviceAPI"===r&&e.event.fire({name:i,args:o})}})),this.start()}return e.prototype.start=function(){var e;null===(e=this.DeviceAPI)||void 0===e||e.start()},e}();n.default=new o},4187:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,i,o=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(t=o.return)&&t.call(o)}finally{if(i)throw i.error}}return a},r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0});var i=1e-6,o=255,a=1/6,s=1/15,u=1/99,l=1/o,A=function(){function e(n){void 0===n&&(n="#000000"),this.R=0,this.G=0,this.B=0,this.H=0,this.S=0,this.L=0,this.A=1,e.isValid(n)&&this.parse(n)}return e.fromColorOrString=function(n){return n?n instanceof e?n:new e(n):e.newBlack()},e.fromArrayRGB=function(n){if(!Array.isArray(n))return console.error("Invalid param rgb: ",n),e.fromRGB(0,0,0);for(;n.length<3;)n.push(0);var r=t(n,3),i=r[0],o=r[1],a=r[2];return e.fromRGB(i,o,a)},e.fromArrayRGBA=function(n){if(!Array.isArray(n))return console.error("Invalid param rgba: ",n),e.fromRGB(0,0,0);for(;n.length<4;)n.push(1);var r=t(n,4),i=r[0],o=r[1],a=r[2],s=r[3];return e.fromRGBA(i,o,a,s)},e.fromHSL=function(n,t,r){var i=new e;return i.H=n,i.S=t,i.L=r,i.hsl2rgb(),i},e.fromHSLA=function(n,t,r,i){var o=new e;return o.H=n,o.S=t,o.L=r,o.hsl2rgb(),o.A=i,o},e.isValid=function(e){if("string"!=typeof e)return!1;if("#"!==e.charAt(0))return!1;switch(e.length){case"#RGB".length:case"#RGBA".length:case"#RRGGBB".length:case"#RRGGBBAA".length:return!0;default:return!1}},e.contrast=function(n,t){var r=e.fromColorOrString(n),i=e.fromColorOrString(t),o=e.mix(r,i,i.A),a=r.luminance(),s=o.luminance(),u=.05;return a>s?(a+u)/(s+u):(s+u)/(a+u)},e.bestContrast=function(n){for(var t,i,o=[],a=1;a<arguments.length;a++)o[a-1]=arguments[a];var s=e.fromColorOrString(n),u=0,l=-1,A=0;try{for(var c=r(o),f=c.next();!f.done;f=c.next()){var d=f.value,h=e.contrast(s,d);h>u&&(u=h,l=A),A++}}catch(e){t={error:e}}finally{try{f&&!f.done&&(i=c.return)&&i.call(c)}finally{if(t)throw t.error}}return o[l]},e.luminance=function(n){return void 0===n?0:e.fromColorOrString(n).luminance()},e.luminanceStep=function(n){if(!e.isValid(n))return-1;var t=e.luminance(n),r=.05;return(t+r)/r>1.05/(t+r)?1:0},e.isDarkColor=function(n){return 0===e.luminanceStep(n)},e.isLightColor=function(n){return 1===e.luminanceStep(n)},e.makeDarker=function(n,t){if(void 0===t&&(t=.5),t<=0)return new e("#000");var r=e.fromColorOrString(n);return t>=1?r:e.fromHSLA(r.H,r.S,r.L,r.A*t)},e.makeHueRotated=function(n,t){void 0===t&&(t=.5);var r=e.fromColorOrString(n);return r.rgb2hsl(),r.H+=t-Math.floor(t),r.H>1&&r.H--,r.hsl2rgb(),r},e.makeTransparent=function(n,t){var r=e.fromColorOrString(n);return r.A=h(t),r},e.mix=function(n,t,r){void 0===r&&(r=.5);var i=e.fromColorOrString(n),o=e.fromColorOrString(t),a=1-r;return e.fromRGBA(r*o.R+a*i.R,r*o.G+a*i.G,r*o.B+a*i.B,r*o.A+a*i.A)},e.newBlack=function(){return e.fromRGB(0,0,0)},e.newWhite=function(){return e.fromRGB(1,1,1)},e.fromRGB=function(n,t,r){var i=new e;return i.R=n,i.G=t,i.B=r,i.A=1,i},e.fromRGBA=function(n,t,r,i){var o=new e;return o.R=n,o.G=t,o.B=r,o.A=i,o},e.normalize=function(n){return new e(n).stringify()},e.interpolate=function(n,t){if(t<1)return[];for(var r=n.map((function(n){return"string"==typeof n?new e(n):n})),i=[],o=1;o<=t;o++){var a=o/(t+1);i.push(e.ramp(r,a))}return i},e.ramp=function(n,t){if(void 0===t&&(t=.5),0===n.length)return e.newBlack();if(1===n.length)return n[0];var r=n.length-1,i=Math.floor(t*r),o=n[i];if(i===r)return o;var a=n[i+1],s=t*r-i;return e.mix(o,a,s)},e.prototype.copy=function(){var n=new e;return n.R=this.R,n.G=this.G,n.B=this.B,n.A=this.A,n.H=this.H,n.S=this.S,n.L=this.L,n},e.prototype.hsl2rgb=function(){var e=6*this.H,n=this.S,t=this.L,r=(1-Math.abs(t+t-1))*n,i=r*(1-Math.abs(e%2-1)),o=0,a=0,s=0;e<3?e<1?(o=r,a=i,s=0):e<2?(o=i,a=r,s=0):(o=0,a=r,s=i):e<4?(o=0,a=i,s=r):e<5?(o=i,a=0,s=r):(o=r,a=0,s=i);var u=t-.5*r;this.R=o+u,this.G=a+u,this.B=s+u},e.prototype.luminance=function(){var e=this,n=e.R,t=e.G,r=e.B,i=.03928,o=.07739938080495357,a=.055,s=.9478672985781991;return.2126*(n<i?n*o:Math.pow((n+a)*s,2.4))+.7152*(t<i?n*o:Math.pow((t+a)*s,2.4))+.0722*(r<i?n*o:Math.pow((r+a)*s,2.4))},e.prototype.luminanceStep=function(){return this.luminance()<.62?0:1},e.prototype.parse=function(e){void 0===e&&(e="#000000");var n=e.trim().toUpperCase();return!!(this.parseHexa.call(this,n)||this.parseRGB.call(this,n)||this.parseRGBA.call(this,n)||this.parseHSL.call(this,n))},e.prototype.rgb2hsl=function(){var e=this.R,n=this.G,t=this.B,r=Math.min(e,n,t),o=Math.max(e,n,t),s=o-r;this.L=.5*(o+r),s<i?(this.H=0,this.S=0):(this.S=s/(1-Math.abs(this.L+this.L-1)),this.H=o===e?n>=t?a*((n-t)/s):a*((t-n)/s):o===n?a*(2+(t-e)/s):a*(4+(e-n)/s))},e.prototype.stringify=function(){var e=p(this.R*o)+p(this.G*o)+p(this.B*o);this.A<1&&(e+=p(this.A*o));for(var n=!0,t=0;t<e.length;t+=2)if(e.charAt(t)!==e.charAt(t+1)){n=!1;break}return n&&(e=6===e.length?e.charAt(0)+e.charAt(2)+e.charAt(4):e.charAt(0)+e.charAt(2)+e.charAt(4)+e.charAt(6)),"#"+e},e.prototype.toArrayRGB=function(){return[this.R,this.G,this.B]},e.prototype.toArrayRGBA=function(){return[this.R,this.G,this.B,this.A]},e.prototype.parseHexa=function(e){if("#"!==e.charAt(0))return!1;var n=0,t=0,r=0,i=1;switch(e.length){case"#fff".length:n=parseInt(e.charAt(1),16)*s,t=parseInt(e.charAt(2),16)*s,r=parseInt(e.charAt(3),16)*s;break;case"#fff7".length:n=parseInt(e.charAt(1),16)*s,t=parseInt(e.charAt(2),16)*s,r=parseInt(e.charAt(3),16)*s,i=parseInt(e.charAt(4),16)*s;break;case"#ffffff".length:n=parseInt(e.substr(1,2),16)*l,t=parseInt(e.substr(3,2),16)*l,r=parseInt(e.substr(5,2),16)*l;break;case"#ffffff77".length:n=parseInt(e.substr(1,2),16)*l,t=parseInt(e.substr(3,2),16)*l,r=parseInt(e.substr(5,2),16)*l,i=parseInt(e.substr(7,2),16)*l}return isNaN(n)||isNaN(t)||isNaN(r)||isNaN(i)?this.R=this.G=this.B=this.A=0:(this.R=n,this.G=t,this.B=r,this.A=i),!0},e.prototype.parseHSL=function(e){var n=d.exec(e);return!!n&&(this.H=h(.002785515320334262*parseInt(n[1],10)),this.S=h(parseInt(n[2],10)*u),this.L=h(parseInt(n[3],10)*u),this.A=1,this.hsl2rgb(),!0)},e.prototype.parseRGB=function(e){var n=c.exec(e);return!!n&&(this.R=h(parseInt(n[1],10)*l),this.G=h(parseInt(n[2],10)*l),this.B=h(parseInt(n[3],10)*l),this.A=1,!0)},e.prototype.parseRGBA=function(e){var n=f.exec(e);return!!n&&(this.R=h(parseInt(n[1],10)*l),this.G=h(parseInt(n[2],10)*l),this.B=h(parseInt(n[3],10)*l),this.A=h(parseFloat(n[4])),!0)},e}();n.default=A;var c=/^RGB[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/,f=/^RGBA[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/,d=/^HSL[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;function h(e){return Math.min(1,Math.max(0,e))}function p(e){var n=Math.min(Math.max(Math.floor(e+i),0),o).toString(16);return n.length<"FF".length&&(n="0"+n),n}},242:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.STILL_DURATION=n.RUN_DURATION=void 0,n.RUN_DURATION=5e3,n.STILL_DURATION=5e3},2105:function(e,n){var t=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e){var n=this;void 0===e&&(e=""),this.name=e,this.listeners=[],this.fire=function(e){var r,i;try{for(var o=t(n.listeners),a=o.next();!a.done;a=o.next()){var s=a.value;try{s(e)}catch(t){console.error("["+n.name+"] Error in a listener!"),console.error(">  ex.: ",t),console.error(">  arg.: ",e)}}}catch(e){r={error:e}}finally{try{a&&!a.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}}}return Object.defineProperty(e.prototype,"length",{get:function(){return this.listeners.length},enumerable:!1,configurable:!0}),e.prototype.add=function(e){this.remove(e),this.listeners.push(e)},e.prototype.remove=function(e){this.listeners=this.listeners.filter((function(n){return n!==e}))},e.prototype.removeAll=function(){this.listeners.splice(0,this.listeners.length)},e}();n.default=r},5796:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n},a=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(i,o){function a(e){try{u(r.next(e))}catch(e){o(e)}}function s(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}u((r=r.apply(e,n||[])).next())}))},s=this&&this.__generator||function(e,n){var t,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=n.call(e,a)}catch(e){o=[6,e],r=0}finally{t=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=o(t(7294)),A=o(t(3935)),c=u(t(3642)),f=u(t(7866)),d=u(t(4329));t(9317);var h=u(t(1342));!function(){var e=this,n=new Promise((function(e){var n=new Audio;n.src=d.default,n.oncanplaythrough=function(){return e(n)}})),t=new Promise((function(e){var n=new Audio;n.src=f.default,n.oncanplaythrough=function(){return e(n)}})),r=new Image;r.src=c.default,r.onload=function(){return a(e,void 0,void 0,(function(){var e,r;return s(this,(function(i){switch(i.label){case 0:return[4,n];case 1:return e=i.sent(),[4,t];case 2:return r=i.sent(),A.render(l.createElement(h.default,{song:e,gun:r}),document.getElementById("root")),(o=document.getElementById("tgd-logo"))&&(o.classList.add("vanish"),window.setTimeout((function(){var e=o.parentNode;e&&e.removeChild(o)}),900)),[2]}var o}))}))}}()},2309:(e,n)=>{var t;Object.defineProperty(n,"__esModule",{value:!0}),n.Mode=void 0,(t=n.Mode||(n.Mode={}))[t.INIT=0]="INIT",t[t.RUN=1]="RUN",t[t.STILL=2]="STILL",t[t.DEAD=3]="DEAD"},8098:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,i,o=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(t=o.return)&&t.call(o)}finally{if(i)throw i.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var u=o(t(7294)),l=t(2309),A=s(t(2982)),c=s(t(2494)),f=s(t(8362)),d=s(t(1291)),h=s(t(4649)),p=s(t(1186));t(3910);var m=t(935);function v(e){var n=["custom","view-AppView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=a(u.useState(""),2),t=(n[0],n[1]);u.useEffect((function(){window.addEventListener("message",(function(e){t(JSON.stringify(e.data,null,"  "))}))}),[]);var r=a((0,m.useMode)(e.gun,e.song),2),i=r[0],o=r[1],s=(0,m.useShakeValue)();return i===l.Mode.STILL&&s>1&&o(l.Mode.DEAD),u.createElement("div",{className:v(e)},u.createElement(A.default,{blur:i===l.Mode.INIT,zoom:i===l.Mode.STILL}),u.createElement(h.default,{value:""+i},u.createElement(p.default,{key:""+l.Mode.INIT,onStart:function(){return o(l.Mode.RUN)}}),u.createElement(f.default,{key:""+l.Mode.RUN}),u.createElement(d.default,{key:""+l.Mode.STILL,value:s}),u.createElement(c.default,{key:""+l.Mode.DEAD,onClick:function(){return o(l.Mode.INIT)}})))}},935:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.useShakeValue=n.useMode=void 0;var r=t(6281);Object.defineProperty(n,"useMode",{enumerable:!0,get:function(){return r.useMode}});var i=t(795);Object.defineProperty(n,"useShakeValue",{enumerable:!0,get:function(){return i.useShakeValue}})},6281:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,i,o=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(t=o.return)&&t.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.useMode=void 0;var s=o(t(7294)),u=t(242),l=t(2309);n.useMode=function(e,n){var t=s.useRef(-1),r=a(s.useState(l.Mode.INIT),2),i=r[0],o=r[1];return s.useEffect((function(){switch(i){case l.Mode.RUN:n.play(),window.clearTimeout(t.current),t.current=window.setTimeout((function(){return o(l.Mode.STILL)}),u.RUN_DURATION);break;case l.Mode.STILL:window.clearTimeout(t.current),t.current=window.setTimeout((function(){return o(l.Mode.RUN)}),u.STILL_DURATION);break;case l.Mode.DEAD:window.clearTimeout(t.current),n.pause(),e.play()}}),[i]),[i,o]}},795:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,i,o=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(t=o.return)&&t.call(o)}finally{if(i)throw i.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.useShakeValue=void 0;var u=o(t(7294)),l=s(t(3665));n.useShakeValue=function(){var e=a(u.useState(0),2),n=e[0],t=e[1];return u.useEffect((function(){var e=function(e){var n=e.name,r=e.args;"shake"===n&&t(r)};return l.default.event.add(e),function(){return l.default.event.remove(e)}}),[]),n}},1342:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(8098);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(i).default}})},1870:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=o(t(7294));function s(e){var n=["custom","view-BackgroundView"];return"string"==typeof e.className&&n.push(e.className),!0===e.blur&&n.push("blur"),!0===e.zoom&&n.push("zoom"),n.join(" ")}t(7900),n.default=function(e){return a.createElement("div",{className:s(e)})}},2982:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(1870);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(i).default}})},9328:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=o(t(7294));function s(e){var n=["custom","view-DeadView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(2351),n.default=function(e){return a.createElement("div",{className:s(e)},a.createElement("button",{onClick:e.onClick},"Recommencer"))}},2494:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(9328);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(i).default}})},8362:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(2722);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(i).default}})},2722:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=o(t(7294));function s(e){var n=["custom","view-RunView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(9619),n.default=function(e){return a.createElement("div",{className:s(e)},a.createElement("div",null,"RUN"))}},1291:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(4011);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(i).default}})},4011:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var s=o(t(7294)),u=a(t(4187));t(2896);var l=["#0f0","#ff0","#f00"].map(u.default.fromColorOrString);function A(e){var n=["custom","view-ShakeProgressView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=e.value,t=Math.max(0,Math.min(1,n)),r=u.default.ramp(l,t),i=r.copy();i.rgb2hsl(),i.L=.9,i.hsl2rgb();var o=r.copy();o.rgb2hsl(),o.L*=.6,o.hsl2rgb();var a="linear-gradient(to top,"+i.stringify()+","+r.stringify()+","+o.stringify()+")";return s.createElement("div",{className:A(e)},s.createElement("div",{style:{width:100*t+"%",backgroundImage:a}}))}},4649:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(3605);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(i).default}})},3605:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=o(t(7294));function s(e){var n=["custom","view-StackView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(2261),n.default=function(e){return a.createElement("div",{className:s(e)},e.children.map((function(n){return a.createElement("div",{key:n.key,className:n.key===e.value?"show":"hide"},n)})))}},1186:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(6387);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(i).default}})},6387:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=o(t(7294));function s(e){var n=["custom","view-StartView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(7463),n.default=function(e){return a.createElement("div",{className:s(e)},a.createElement("div",null),a.createElement("p",null,"Quand la contine retentit, courrez !"),a.createElement("p",null,"Quand elle s'arrête, ne bougez plus..."),a.createElement("button",{onClick:e.onStart},a.createElement("div",null,"Start!")))}},3642:(e,n,t)=>{e.exports=t.p+"img/background.06a0d97c982b086b9d03.webp"},9441:(e,n,t)=>{e.exports=t.p+"img/dead.9e065c637edc4804df35.webp"},7866:(e,n,t)=>{e.exports=t.p+"snd/gun.620d5745a9ecd85006b5.mp3"},4329:(e,n,t)=>{e.exports=t.p+"snd/song.bf5b380e9e05c02031a0.mp3"}},e=>{e.O(0,[977],(()=>(5796,e(e.s=5796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,